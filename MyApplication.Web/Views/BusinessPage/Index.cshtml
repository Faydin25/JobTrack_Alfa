@model MyApplication.Web.Models.BusinessPageViewModel
@using TaskStatus = MyApplication.Web.Models.TaskStatus

<div class="container py-5">
    <h1 class="text-center fw-bold text-primary mb-2"><i class="bi bi-kanban-fill me-2"></i>Görev Panosu</h1>
    <p class="text-center text-muted mb-4">Görevleri sürükleyip bırakarak durumlarını güncelleyebilirsiniz.</p>

    <!-- Filtreleme ve Görev Ekleme -->
    <div class="d-flex justify-content-between align-items-center mb-4 bg-white p-3 rounded-4 shadow-sm">
        <form method="get" asp-action="Index" asp-controller="BusinessPage" class="d-flex align-items-center">
            <label for="userId" class="col-form-label fw-semibold me-2"><i class="bi bi-person"></i> Kullanıcı:</label>
            <select id="userId" name="userId" class="form-select" onchange="this.form.submit()">
                <option value="">Tümü</option>
                @foreach (var user in Model.Users)
                {
                    var selected = (ViewContext.HttpContext.Request.Query["userId"] == user.Id.ToString()) ? "selected" : "";
                    @Html.Raw($"<option value=\"{user.Id}\" {selected}>{user.UserName}</option>")
                }
            </select>
        </form>
        <button class="btn btn-success px-4" data-bs-toggle="modal" data-bs-target="#taskModal"><i class="bi bi-plus-circle me-2"></i>Görev Ekle</button>
    </div>

    <!-- Modal: Görev Ekle -->
    <div class="modal fade" id="taskModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-4">
                <form method="post" asp-action="CreateTask" asp-controller="BusinessPage" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title fw-bold text-primary"><i class="bi bi-plus-circle me-2"></i>Yeni Görev Ekle</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Başlık</label>
                            <input type="text" name="title" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Açıklama</label>
                            <textarea name="description" class="form-control" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Durum</label>
                            <select name="status" class="form-select">
                                @foreach (var status in Enum.GetValues(typeof(TaskStatus)))
                                {
                                    <option value="@status">@(status.ToString() == "ToDo" ? "Yapılacak" : status.ToString() == "InProgress" ? "Yapılıyor" : "Tamamlandı")</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Kullanıcı</label>
                            <select name="userId" class="form-select" required>
                                @foreach (var user in Model.Users)
                                {
                                    <option value="@user.Id">@user.UserName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Son Teslim Tarihi</label>
                            <input type="date" name="deadline" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Ek Dosya</label>
                            <input type="file" name="attachment" class="form-control" accept=".pdf,.doc,.docx,image/*" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                        <button type="submit" class="btn btn-success">Ekle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Kanban Board -->
    <div class="row kanban-board">
        @foreach (var status in Enum.GetValues(typeof(TaskStatus)))
        {
            <div class="col-md-4 kanban-column" id="column-@status">
                <h4 class="text-center fw-semibold mb-3 p-2 rounded-3 @GetHeaderClass(status)">
                    <i class="@GetIconClass(status) me-2"></i>@(status.ToString() == "ToDo" ? "Yapılacak" : status.ToString() == "InProgress" ? "Yapılıyor" : "Tamamlandı")
                </h4>
                <div class="kanban-cards">
                    @foreach (var task in Model.Tasks.Where(t => t.Status == (TaskStatus)status))
                    {
                        <div class="card mb-3 shadow-sm task-card position-relative" draggable="true" id="task-@task.TaskId">
                            <form method="post" asp-action="DeleteTask" asp-controller="BusinessPage" onsubmit="return confirm('Görevi silmek istediğinizden emin misiniz?');" class="delete-task-btn">
                                <input type="hidden" name="taskId" value="@task.TaskId" />
                                <button type="submit" class="btn btn-outline-danger"><i class="bi bi-x-lg"></i></button>
                            </form>
                            <div class="card-body">
                                <h5 class="card-title fw-semibold mb-2">@task.Title</h5>
                                <p class="card-text">@task.Description</p>
                                <p><small class="text-muted"><i class="bi bi-person-circle me-1"></i>@task.User.UserName</small></p>
                                <p><small class="text-muted"><i class="bi bi-calendar-event me-1"></i>Son Teslim: @task.Deadline.ToString("dd.MM.yyyy")</small></p>
                                @if (!string.IsNullOrEmpty(task.AttachmentPath))
                                {
                                    <p><a href="@task.AttachmentPath" target="_blank"><i class="bi bi-paperclip"></i> Ek Dosya</a></p>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetHeaderClass(object status)
    {
        return (TaskStatus)status switch
        {
            TaskStatus.ToDo => "bg-warning text-dark",
            TaskStatus.InProgress => "bg-primary text-white",
            TaskStatus.Done => "bg-success text-white",
            _ => "bg-secondary text-white"
            };
    }

    string GetIconClass(object status)
    {
        return (TaskStatus)status switch
        {
            TaskStatus.ToDo => "bi bi-list-task",
            TaskStatus.InProgress => "bi bi-gear",
            TaskStatus.Done => "bi bi-check2-circle",
            _ => "bi bi-question-circle"
            };
    }
}

<style>
    .kanban-column {
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 15px;
        min-height: 500px;
    }
    .kanban-cards {
        min-height: 450px;
    }
    .task-card {
        cursor: grab;
        border-radius: 10px;
        transition: box-shadow 0.2s;
        position: relative;
    }
    .task-card:hover {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15)!important;
    }
    .delete-task-btn {
        position: absolute;
        top: 8px;
        right: 8px;
        z-index: 2;
    }
    .delete-task-btn .btn {
        padding: 0.35rem 0.5rem;
        font-size: 1.2rem;
        border-radius: 50%;
        background: #fff;
        border: 2px solid #dc3545;
        color: #dc3545;
        box-shadow: 0 2px 8px rgba(220,53,69,0.08);
        transition: background 0.2s, color 0.2s;
    }
    .delete-task-btn .btn:hover, .delete-task-btn .btn:focus {
        background: #dc3545;
        color: #fff;
    }
    .dragging {
        opacity: 0.5;
    }
    .drag-over {
        border: 2px dashed #0d6efd;
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Drag and Drop functionality
        const draggables = document.querySelectorAll('.task-card');
        const columns = document.querySelectorAll('.kanban-column');

        draggables.forEach(draggable => {
            draggable.addEventListener('dragstart', () => {
                draggable.classList.add('dragging');
            });
            draggable.addEventListener('dragend', () => {
                draggable.classList.remove('dragging');
            });
        });

        columns.forEach(column => {
            column.addEventListener('dragover', e => {
                e.preventDefault();
                column.classList.add('drag-over');
            });
            column.addEventListener('dragleave', () => {
                column.classList.remove('drag-over');
            });
            column.addEventListener('drop', e => {
                e.preventDefault();
                column.classList.remove('drag-over');
                const dragging = document.querySelector('.dragging');
                if (dragging) {
                    column.querySelector('.kanban-cards').appendChild(dragging);
                    const taskId = dragging.id.split('-')[1];
                    const newStatus = column.id.split('-')[1];
                    
                    // AJAX call to update status
                    $.post('/BusinessPage/UpdateTaskStatus', { taskId: taskId, newStatus: newStatus })
                        .fail(function() {
                            alert('Durum güncellenirken bir hata oluştu.');
                            // Optionally revert the drag
                        });
                }
            });
        });
    </script>
}
