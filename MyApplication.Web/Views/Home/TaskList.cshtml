@model MyApplication.Web.Models.BusinessPageViewModel
@using TaskStatus = MyApplication.Web.Models.TaskStatus;

<div class="list-container">
    <!-- Filtre Çubuğu -->
    <form method="get" asp-action="TaskList" asp-controller="Home" class="row g-3 align-items-center mb-4 bg-white p-3 rounded-4 shadow-sm">
        <div class="col-auto">
            <label for="userId" class="col-form-label fw-semibold"><i class="bi bi-person"></i> Kullanıcı:</label>
        </div>
        <div class="col-auto">
            <select id="userId" name="userId" class="form-select" onchange="this.form.submit()">
                <option value="">Tümü</option>
                @if (Model.Users != null)
                {
                    foreach (var user in Model.Users)
                    {
                        var selected = ViewContext.HttpContext.Request.Query["userId"] == user.Id.ToString() ? "selected" : "";
                        @Html.Raw($"<option value=\"{user.Id}\" {selected}>{user.UserName}</option>")
                    }
                }
            </select>
        </div>
        <div class="col-auto">
            <label for="status" class="col-form-label fw-semibold"><i class="bi bi-list-task"></i> Durum:</label>
        </div>
        <div class="col-auto">
            <select id="status" name="status" class="form-select" onchange="this.form.submit()">
                <option value="">Tümü</option>
                @foreach (TaskStatus status in Enum.GetValues(typeof(TaskStatus)))
                {
                    var statusText = status == TaskStatus.ToDo ? "Yapılacak" : status == TaskStatus.InProgress ? "Yapılıyor" : status == TaskStatus.Done ? "Tamamlandı" : status.ToString();
                    var selected = ViewContext.HttpContext.Request.Query["status"] == ((int)status).ToString() ? "selected" : "";
                    @Html.Raw($"<option value=\"{(int)status}\" {selected}>{statusText}</option>")
                }
            </select>
        </div>
    </form>
    <div class="table-responsive shadow rounded-4">
        <table class="table table-striped align-middle mb-0">
            <thead class="table-dark">
                <tr>
                    <th>Task Adı</th>
                    <th>Açıklama</th>
                    <th>Durum</th>
                    <th>Kullanıcı</th>
                    <th>Oluşturulma Tarihi</th>
                    <th>Son Teslim Tarihi</th>
                    <th>Ek Dosya</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Tasks)
                {
                    var isOverdue = task.Deadline < DateTime.Now && task.Status != TaskStatus.Done;
                    var rowClass = isOverdue ? "overdue-task" : "";
                    <tr class="@rowClass">
                        <td class="fw-semibold">
                            <i class="bi bi-check2-square me-1"></i>@task.Title
                            @if (isOverdue)
                            {
                                <span title="Süresi Geçti" class="ms-2 text-warning-emphasis"><i class="bi bi-exclamation-triangle-fill"></i></span>
                            }
                        </td>
                        <td>@task.Description</td>
                        <td>
                            @if (task.Status == TaskStatus.ToDo)
                            {
                                <span class="badge bg-warning text-dark px-3 py-2">Yapılacak</span>
                            }
                            else if (task.Status == TaskStatus.InProgress)
                            {
                                <span class="badge bg-primary px-3 py-2">Yapılıyor</span>
                            }
                            else if (task.Status == TaskStatus.Done)
                            {
                                <span class="badge bg-success px-3 py-2">Tamamlandı</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary px-3 py-2">@task.Status.ToString()</span>
                            }
                        </td>
                        <td>@(task.User?.UserName ?? "Kullanıcı Yok")</td>
                        <td>@task.CreatedDate.ToString("yyyy-MM-dd")</td>
                        <td>@task.Deadline.ToString("yyyy-MM-dd")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(task.AttachmentPath))
                            {
                                <a href="@task.AttachmentPath" target="_blank"><i class="bi bi-paperclip"></i> Görüntüle/İndir</a>
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                        <td>
                            @if (task.Status == TaskStatus.ToDo && task.UserId == currentUserId)
                            {
                                <form method="post" asp-action="UpdateStatus" asp-controller="Home" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="taskId" value="@task.TaskId" />
                                    <input type="hidden" name="newStatus" value="InProgress" />
                                    <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-play-circle"></i> Başlat</button>
                                </form>
                            }
                            @if (task.Status == TaskStatus.InProgress && task.UserId == currentUserId)
                            {
                                <form method="post" asp-action="UpdateStatus" asp-controller="Home" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="taskId" value="@task.TaskId" />
                                    <input type="hidden" name="newStatus" value="Done" />
                                    <button type="submit" class="btn btn-success btn-sm"><i class="bi bi-check-circle"></i> Tamamla</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<style>
    .overdue-task, .overdue-task td, .overdue-task th {
        background-color: #e53935 !important;
        color: #fff !important;
        border-color: #b71c1c !important;
        box-shadow: 0 0 4px #b71c1c33;
    }
    .table-warning, .table-primary, .table-success {
        background-color: inherit !important;
    }
</style>

@functions {
    int currentUserId
    {
        get
        {
            return int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
        }
    }
}
